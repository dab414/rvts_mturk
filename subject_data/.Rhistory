citation()
citation('lme4')
wd <- 'D:/Users/dbrau/Google Drive/GRAD/Research/By Project/EasyFeedEyes/'
install.packages('pwr')
library(pwr)
pwr.r.test(r = .3, sig.level = .05, power = .95)
pwr.r.test(r = .3, sig.level = .05, power = .80)
pwr.r.test(r = .5, sig.level = .05, power = .95)
library(pwr)
pwr.r.test(r = .3, power = .8)
x <- c(a = 1, b = 2, c = 3)
x
x[a]
x['a']
citation()
class_names <- c('Aislinn',
'Delilah',
'Emma',
'Julia',
'Elana',
'Mary Ellen',
'Nick',
'Mike',
'Libby',
'Samantha',
'Mack',
'Sophie',
'Taja')
sample(class_names)
help(sample)
sample(class_names,1)
sample(class_names,1)
sample(class_names,1)
length(class_names)
select_name <- function(){
class_names <- c('Aislinn',
'Delilah',
'Emma',
'Julia',
'Elana',
'Mary Ellen',
'Nick',
'Mike',
'Libby',
'Samantha',
'Mack',
'Sophie',
'Taja')
sample(class_names,1)
}
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
select_name()
getwd()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
```{r}
plot(cars)
getwd()
ls()
library(ggplot2) # the library necessary to use ggplot
data('midwest', package = 'ggplot2')
head(midwest)
str(midwest)
ggplot(data = midwest, aes(x = area, y = poptotal))
ggplot(midwest, aes(x = area, y = poptotal)) + geom_point()
ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + ylim(0,1000000)
p1
options(scipen = 999)
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + ylim(0,1000000)
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + ylim(0,100000)
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + xlim(0, 0.1) + ylim(0,100000)
p1
data('midwest', package = 'ggplot2')
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + xlim(0, 0.1) + ylim(0,100000)
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + ylim(0,10000)
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + scale_y_continuous(ylim(0,10000))
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + scale_y_continuous(ylim = (0,10000))
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + scale_y_continuous(ylim = c(0,10000))
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + scale_y_continuous(limits = c(0,10000))
p1
ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm') +
scale_y_continuous(limits = c(0,10000))
ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm') +
scale_y_continuous(limits = c(0,100000))
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point()
p1 + geom_smooth(method = 'lm')
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal))
p1 + geom_point()
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal))
p1 + layer(geom = 'point', stat = 'identity', position = 'identity')
p1
p1 <- p1 + layer(geom = 'point', stat = 'identity', position = 'identity')
p1
p1 <- ggplot(midwest, aes(x = area, y = poptotal))
p1 <- p1 + geom_point()
p1 <- ggplot(midwest, aes(x = area, y = poptotal))
p1 + geom_point() + geom_smooth(method = 'lm')
p1 <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p1 + ylim(0, 1000000)
p + coord_cartesian(ylim = c(0, 1000000))
p <- ggplot(midwest, aes(x = area, y = poptotal)) + geom_point() + geom_smooth(method = 'lm')
p + coord_cartesian(ylim = c(0, 1000000))
p1 <- p + coord_cartesian(ylim = c(0, 1000000))
p1 + labs(title = 'Area Vs Population', subtitle = 'From midwest dataset', y = 'Population', x = 'Area', caption = 'Midwest Demographics')
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(col="steelblue", size=3) +   # Set static color and size for points
geom_smooth(method="lm", col="firebrick") +  # change the color of line
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state), size=3) +  # When you put arguments inside aes(), generally it'll vary based on state categories.
geom_smooth(method="lm", col="firebrick", size=2) +
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
p1 <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state), size=3) +  # When you put arguments inside aes(), generally it'll vary based on state categories.
geom_smooth(method="lm", col="firebrick", size=2) +
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
p1 + theme(legend.position = 'none')
p1 + scale_color_brewer(palette = 'Set1')
library(RColorBrewer)
head(brewer.pal.info, 10)
seq(0, 0.1, 0.01)
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state), size=3) +  # Set color to vary based on state categories.
geom_smooth(method="lm", col="firebrick", size=2) +
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
# Change breaks
gg + scale_x_continuous(breaks=seq(0, 0.1, 0.01))
gg + scale_x_continuous(breaks=seq(0, 0.1, 0.01), labels = letters[1:11])
help(paste0)
help(sprintf)
sprintf('%1.2%%',pi)
sprintf('1.2%%',pi)
pi
sprintf('%1.2',pi)
gg + scale_x_continuous(breaks=seq(0, 0.1, 0.01), labels = sprintf("%1.2f%%", seq(0, 0.1, 0.01))) +
scale_y_continuous(breaks=seq(0, 1000000, 200000), labels = function(x){paste0(x/1000, 'K')})
gg + theme_bw() + labs(subtitle = 'BW Theme')
gg + theme_classic() + labs(subtitle = 'Classic Theme')
head(mpg)
g <- ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
theme_bw()
## facet wrap
g + facet_wrap( ~ class, nrow = 3) + labs(title = 'Hwy vs Displ', caption = 'Source: mpg', subtitle = 'Ggplot2 - Faceting - Multiple plots in one figure')
g + facet_wrap( ~ class) + labs(title = 'Hwy vs Displ', caption = 'Source: mpg', subtitle = 'Ggplot2 - Faceting - Multiple plots in one figure')
g + facet_grid( ~ class) + labs(title = 'Hwy vs Displ', caption = 'Source: mpg', subtitle = 'Ggplot2 - Faceting - Multiple plots in one figure')
g + facet_grid(manufacturer ~ class)
g + facet_grid(cyl ~ class)
quit()
quit()
quit()
library(dplyr)
setwd("D:/Users/dbrau/Dropbox/mturk/build rvts/subject_data")
x <- read.csv('final_data.csv')
x %>%
group_by(transition) %>%
summarize(cost = mean(rt)) %>%
ggplot(aes(x = transition, y = cost)) +
geom_bar(stat = 'identity', position = dodge)
library(ggplot2)
x %>%
group_by(transition) %>%
summarize(cost = mean(rt)) %>%
ggplot(aes(x = transition, y = cost)) +
geom_bar(stat = 'identity', position = dodge)
x %>%
group_by(transition) %>%
summarize(cost = mean(rt)) %>%
ggplot(aes(x = transition, y = cost)) +
geom_bar(stat = 'identity', position = 'dodge')
quit()
